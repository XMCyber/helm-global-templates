suite: Test service template
templates:
  - template.yaml

tests:
  - it: should create basic ClusterIP service correctly
    values:
      - service_values.yaml
    asserts:
      - equal:
          path: kind
          value: Service
      - equal:
          path: apiVersion
          value: v1
      - equal:
          path: metadata.name
          value: api-service
      - equal:
          path: metadata.namespace
          value: test-namespace
      - equal:
          path: spec.selector.app
          value: api-service
      - equal:
          path: spec.type
          value: ClusterIP

  - it: should set ports correctly
    values:
      - service_values.yaml
    asserts:
      - equal:
          path: spec.ports[0].port
          value: 80
      - equal:
          path: spec.ports[0].targetPort
          value: 8080
      - equal:
          path: spec.ports[0].protocol
          value: TCP

  - it: should set session affinity to None by default
    values:
      - service_values.yaml
    asserts:
      - equal:
          path: spec.sessionAffinity
          value: None

  - it: should set clusterIP to None
    values:
      - service_values.yaml
    asserts:
      - equal:
          path: spec.clusterIP
          value: None

  - it: should not render service if disabled
    values:
      - service_values.yaml
    set:
      services.api.disabled: true
    asserts:
      - hasDocuments:
          count: 0

  - it: should create LoadBalancer service with external traffic policy
    values:
      - service_values.yaml
    set:
      services.api.type: LoadBalancer
      services.api.externalTrafficPolicy: Local
    asserts:
      - equal:
          path: spec.type
          value: LoadBalancer
      - equal:
          path: spec.externalTrafficPolicy
          value: Local

  - it: should set annotations correctly
    values:
      - service_values.yaml
    set:
      services.api.annotations:
        custom.annotation/test: "true"
    asserts:
      - equal:
          path: metadata.annotations["custom.annotation/test"]
          value: "true"

  - it: should set specific clusterIP
    values:
      - service_values.yaml
    set:
      services.api.clusterIP: 10.0.0.10
    asserts:
      - equal:
          path: spec.clusterIP
          value: 10.0.0.10

  - it: should set multiple ports
    values:
      - service_values.yaml
    set:
      services.api.ports:
        - port: 80
          targetPort: 8080
          protocol: TCP
        - port: 443
          targetPort: 8443
          protocol: TCP
    asserts:
      - equal:
          path: spec.ports[0].port
          value: 80
      - equal:
          path: spec.ports[1].port
          value: 443
      - equal:
          path: spec.ports[1].targetPort
          value: 8443
  
  - it: should set loadBalancer source ranges
    values:
      - service_values.yaml
    set:
      services.api.type: LoadBalancer
      services.api.loadBalancerSourceRanges:
        - 10.0.0.0/24
        - 192.168.1.0/24
    asserts:
      - equal:
          path: spec.type
          value: LoadBalancer
      - equal:
          path: spec.loadBalancerSourceRanges[0]
          value: 10.0.0.0/24
      - equal:
          path: spec.loadBalancerSourceRanges[1]
          value: 192.168.1.0/24

  - it: should render global placeholders in annotations
    values:
      - service_values.yaml
    set:
      global:
        environment: "production"
        region: "us-west-2"
        app:
          version: "1.0.0"
          name: "test-app"
      services.api.annotations:
        service.environment: "{{global.environment}}"
        service.region: "{{global.region}}"
        service.app-version: "{{global.app.version}}"
        service.app-name: "{{global.app.name}}"
        service.combined: "deployed {{global.app.name}} v{{global.app.version}} in {{global.region}}"
    asserts:
      - equal:
          path: metadata.annotations["service.environment"]
          value: production
      - equal:
          path: metadata.annotations["service.region"]
          value: us-west-2
      - equal:
          path: metadata.annotations["service.app-version"]
          value: "1.0.0"
      - equal:
          path: metadata.annotations["service.app-name"]
          value: test-app
      - equal:
          path: metadata.annotations["service.combined"]
          value: "deployed test-app v1.0.0 in us-west-2"

  - it: should handle mixed normal and global annotations
    values:
      - service_values.yaml
    set:
      global:
        environment: "staging"
        version: "2.0.0"
      services.api.annotations:
        normal.annotation: "static-value"
        kubernetes.io/service-type: "LoadBalancer"
        global.environment: "test-{{ global.environment }}"
        global.version: "v{{global.version}}"
        mixed.annotation: "env is {{global.environment}} with normal text"
    asserts:
      - equal:
          path: metadata.annotations["normal.annotation"]
          value: "static-value"
      - equal:
          path: metadata.annotations["kubernetes.io/service-type"]
          value: "LoadBalancer"
      - equal:
          path: metadata.annotations["global.environment"]
          value: "test-staging"
      - equal:
          path: metadata.annotations["global.version"]
          value: "v2.0.0"
      - equal:
          path: metadata.annotations["mixed.annotation"]
          value: "env is staging with normal text"

  - it: should preserve normal annotations without global placeholders
    values:
      - service_values.yaml
    set:
      services.api.annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        custom.domain/annotation: "preserve-special-chars!@#$%"
        multiline: |-
          This is a multiline
          annotation value
          with multiple lines
    asserts:
      - equal:
          path: metadata.annotations["prometheus.io/scrape"]
          value: "true"
      - equal:
          path: metadata.annotations["prometheus.io/port"]
          value: "8080"
      - equal:
          path: metadata.annotations["prometheus.io/path"]
          value: "/metrics"
      - equal:
          path: metadata.annotations["custom.domain/annotation"]
          value: "preserve-special-chars!@#$%"
      - equal:
          path: metadata.annotations.multiline
          value: |-
            This is a multiline
            annotation value
            with multiple lines