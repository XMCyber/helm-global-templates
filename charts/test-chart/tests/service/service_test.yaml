suite: Test service template
templates:
  - template.yaml

tests:
  - it: should create basic ClusterIP service correctly
    values:
      - service_values.yaml
    asserts:
      - equal:
          path: kind
          value: Service
      - equal:
          path: apiVersion
          value: v1
      - equal:
          path: metadata.name
          value: api-service
      - equal:
          path: metadata.namespace
          value: test-namespace
      - equal:
          path: spec.selector.app
          value: api-service
      - equal:
          path: spec.type
          value: ClusterIP

  - it: should set ports correctly
    values:
      - service_values.yaml
    asserts:
      - equal:
          path: spec.ports[0].port
          value: 80
      - equal:
          path: spec.ports[0].targetPort
          value: 8080
      - equal:
          path: spec.ports[0].protocol
          value: TCP

  - it: should set session affinity to None by default
    values:
      - service_values.yaml
    asserts:
      - equal:
          path: spec.sessionAffinity
          value: None

  - it: should set clusterIP to None
    values:
      - service_values.yaml
    asserts:
      - equal:
          path: spec.clusterIP
          value: None

  - it: should not render service if disabled
    values:
      - service_values.yaml
    set:
      services.api.disabled: true
    asserts:
      - hasDocuments:
          count: 0

  - it: should create LoadBalancer service with external traffic policy
    values:
      - service_values.yaml
    set:
      services.api.type: LoadBalancer
      services.api.externalTrafficPolicy: Local
    asserts:
      - equal:
          path: spec.type
          value: LoadBalancer
      - equal:
          path: spec.externalTrafficPolicy
          value: Local

  - it: should set annotations correctly
    values:
      - service_values.yaml
    set:
      services.api.annotations:
        custom.annotation/test: "true"
    asserts:
      - equal:
          path: metadata.annotations["custom.annotation/test"]
          value: "true"

  - it: should set specific clusterIP
    values:
      - service_values.yaml
    set:
      services.api.clusterIP: 10.0.0.10
    asserts:
      - equal:
          path: spec.clusterIP
          value: 10.0.0.10

  - it: should set multiple ports
    values:
      - service_values.yaml
    set:
      services.api.ports:
        - port: 80
          targetPort: 8080
          protocol: TCP
        - port: 443
          targetPort: 8443
          protocol: TCP
    asserts:
      - equal:
          path: spec.ports[0].port
          value: 80
      - equal:
          path: spec.ports[1].port
          value: 443
      - equal:
          path: spec.ports[1].targetPort
          value: 8443
  
  - it: should set loadBalancer source ranges
    values:
      - service_values.yaml
    set:
      services.api.type: LoadBalancer
      services.api.loadBalancerSourceRanges:
        - 10.0.0.0/24
        - 192.168.1.0/24
    asserts:
      - equal:
          path: spec.type
          value: LoadBalancer
      - equal:
          path: spec.loadBalancerSourceRanges[0]
          value: 10.0.0.0/24
      - equal:
          path: spec.loadBalancerSourceRanges[1]
          value: 192.168.1.0/24