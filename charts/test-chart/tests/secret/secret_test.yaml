suite: Test secret template
templates:
  - template.yaml

tests:
  - it: should create basic secret correctly
    values:
      - secret_values.yaml
    asserts:
      - equal:
          path: kind
          value: Secret
      - equal:
          path: apiVersion
          value: v1
      - equal:
          path: metadata.name
          value: app-secret
      - equal:
          path: metadata.namespace
          value: test-namespace
      - equal:
          path: type
          value: Opaque

  - it: should set data correctly
    set:
      secrets:
        - name: app-secret
          namespace: test-namespace
          data:
            username: YWRtaW4=
            password: cGFzc3dvcmQ=
    asserts:
      - equal:
          path: data.username
          value: |
            YWRtaW4=
      - equal:
          path: data.password
          value: |
            cGFzc3dvcmQ=

  - it: should set stringData correctly
    set:
      secrets:
        - name: app-secret
          namespace: test-namespace
          stringData:
            config.yaml: |
              username: admin
              password: password123
    asserts:
      - equal:
          path: stringData["config.yaml"]
          value: |
            username: admin
            password: password123

  - it: should render multiline stringData correctly
    values:
      - secret_values.yaml
    set:
      secrets:
        - name: app-secret
          namespace: test-namespace
          stringData:
            anotherField: value
            longField: |
              this is a very long field
              with multiple lines
    asserts:
      - equal:
          path: stringData["anotherField"]
          value: value
      - equal:
          path: stringData["longField"]
          value: |
            this is a very long field
            with multiple lines

  - it: should not render secret if disabled
    values:
      - secret_values.yaml
    set:
      secrets.app-secret.disable: true
    asserts:
      - hasDocuments:
          count: 0

  - it: should set annotations correctly
    values:
      - secret_values.yaml
    set:
      secrets.app-secret.annotations:
        test-annotation: test-value
    asserts:
      - equal:
          path: metadata.annotations["test-annotation"]
          value: test-value

  - it: should set labels correctly
    values:
      - secret_values.yaml
    set:
      secrets.app-secret.labels:
        custom-label: test-value
    asserts:
      - equal:
          path: metadata.labels["custom-label"]
          value: test-value

  - it: should fail when name is not provided
    set:
      secrets:
        - namespace: test-namespace
    asserts:
      - failedTemplate:
          errorMessage: "Name is required for secret"