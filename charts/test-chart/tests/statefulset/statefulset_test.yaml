suite: Test statefulset template
templates:
  - template.yaml

tests:
  - it: should create basic statefulset correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: kind
          value: StatefulSet
      - equal:
          path: apiVersion
          value: apps/v1
      - equal:
          path: metadata.name
          value: my-statefulset
      - equal:
          path: metadata.namespace
          value: test-namespace

  - it: should set annotations correctly
    values:
      - statefulset_values.yaml
    set:
      statefulsets.my-statefulset.annotations:
        test-annotation: test-value
    asserts:
      - equal:
          path: metadata.annotations.test-annotation
          value: test-value

  - it: should configure containers correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].name
          value: my-app-container
      - equal:
          path: spec.template.spec.containers[0].image
          value: docker.io/busybox:1.0.0
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Always

  - it: should set init containers correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: init-db
      - equal:
          path: spec.template.spec.initContainers[0].image
          value: docker.io/busybox:1.0.0
      - equal:
          path: spec.template.spec.initContainers[0].command[0]
          value: "/bin/sh"

  - it: should set volumes and mounts correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: spec.template.spec.volumes[0].name
          value: config-volume
      - equal:
          path: spec.volumeClaimTemplates[0].metadata.name
          value: my-pvc
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: config-volume
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath
          value: /config

  - it: should set projected volumes correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: spec.template.spec.volumes[1].name
          value: projected-volume
      - equal:
          path: spec.template.spec.volumes[1].projected.sources[0].secret.name
          value: mysecret
      - equal:
          path: spec.template.spec.volumes[1].projected.sources[0].secret.items[0].key
          value: username
      - equal:
          path: spec.template.spec.volumes[1].projected.sources[0].secret.items[0].path
          value: my-group/my-username

  - it: should set affinity rules correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[0].matchExpressions[0].key
          value: kubernetes.io/e2e-az-name

  - it: should set security context correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: spec.template.spec.securityContext.runAsNonRoot
          value: true
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false

  - it: should set imagePullSecrets correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: my-secret

  - it: should set persistentVolumeClaimRetentionPolicy correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: spec.persistentVolumeClaimRetentionPolicy.whenDeleted
          value: Delete
      - equal:
          path: spec.persistentVolumeClaimRetentionPolicy.whenScaled
          value: Retain

  - it: should not render statefulset if disabled
    values:
      - statefulset_values.yaml
    set:
      statefulsets.my-statefulset.disabled: true
    asserts:
      - hasDocuments:
          count: 0

  - it: should set valueFrom correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[1].name
          value: key
      - equal:
          path: spec.template.spec.containers[0].env[1].valueFrom.configMapKeyRef.name
          value: app-config
      - equal:
          path: spec.template.spec.containers[0].env[1].valueFrom.configMapKeyRef.key
          value: keyRef
      - equal:
          path: spec.template.spec.containers[0].env[2].name
          value: key2
      - equal:
          path: spec.template.spec.containers[0].env[2].valueFrom.secretKeyRef.name
          value: app-secret
      - equal:
          path: spec.template.spec.containers[0].env[2].valueFrom.secretKeyRef.key
          value: key2Ref

  - it: should set livenessProbe correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.path
          value: /health
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.port
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
          value: 15

  - it: should set readinessProbe correctly
    values:
      - statefulset_values.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.path
          value: /ready
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.port
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.initialDelaySeconds
          value: 5
