suite: Test externalsecret template
templates:
  - template.yaml

tests:
  - it: should create basic externalsecret correctly
    values:
      - externalsecret_values.yaml
    asserts:
      - equal:
          path: apiVersion
          value: external-secrets.io/v1beta1
      - equal:
          path: kind
          value: ExternalSecret
      - equal:
          path: metadata.name
          value: app-external-secret
      - equal:
          path: metadata.namespace
          value: test-namespace

  - it: should set secretStoreRef correctly
    values:
      - externalsecret_values.yaml
    set:
      externalsecrets.app-secret.secretStoreRef:
        name: aws-secrets
        kind: SecretStore
    asserts:
      - equal:
          path: spec.secretStoreRef.name
          value: aws-secrets
      - equal:
          path: spec.secretStoreRef.kind
          value: SecretStore

  - it: should set target correctly
    values:
      - externalsecret_values.yaml
    set:
      externalsecrets.app-secret.target:
        name: generated-secret
        creationPolicy: Owner
    asserts:
      - equal:
          path: spec.target.name
          value: generated-secret
      - equal:
          path: spec.target.creationPolicy
          value: Owner

  - it: should set data entries correctly using list
    values:
      - externalsecret_values.yaml
    set:
      externalsecrets.app-secret.data:
        - secretKey: username
          remoteRef:
            key: prod/app/username
        - secretKey: password
          remoteRef:
            key: prod/app/password
            property: value
    asserts:
      - lengthEqual:
          path: spec.data
          count: 2
      - equal:
          path: spec.data[0].secretKey
          value: username
      - equal:
          path: spec.data[0].remoteRef.key
          value: prod/app/username
      - equal:
          path: spec.data[1].remoteRef.property
          value: value

  - it: should set dataFrom correctly using map
    values:
      - externalsecret_values.yaml
    set:
      externalsecrets.app-secret.data:
        username:
          remoteRef:
            key: prod/app/username
            property: username
        password:
          remoteRef:
            key: prod/app/password
    asserts:
      - lengthEqual:
          path: spec.data
          count: 2
      - contains:
          path: spec.data
          content:
            secretKey: username
            remoteRef:
              key: prod/app/username
              property: username
      - contains:
          path: spec.data
          content:
            secretKey: password
            remoteRef:
              key: prod/app/password

  - it: should create in multiple namespaces
    values:
      - externalsecret_values.yaml
    set:
      externalsecrets.app-secret.namespace: null # Remove the default namespace value
      externalsecrets.app-secret.namespaces:
        - ns1
        - ns2
    asserts:
      - hasDocuments:
          count: 2
      - equal:
          path: metadata.namespace
          value: ns1
        documentIndex: 0
      - equal:
          path: metadata.namespace
          value: ns2
        documentIndex: 1

  - it: should set dataFrom correctly
    values:
      - externalsecret_values.yaml
    set:
      externalsecrets.app-secret.dataFrom:
        - extract:
            key: key
    asserts:
      - equal:
          path: spec.dataFrom[0].extract.key
          value: key

  - it: should not render if disabled
    values:
      - externalsecret_values.yaml
    set:
      externalsecrets.app-secret.disabled: true
    asserts:
      - hasDocuments:
          count: 0
          
  - it: should handle multiple dataFrom entries
    values:
      - externalsecret_values.yaml
    set:
      externalsecrets.app-secret.dataFrom:
        - extract:
            key: dev/app/secrets
        - extract:
            key: prod/app/secrets2
    asserts:
      - lengthEqual:
          path: spec.dataFrom
          count: 2
      - equal:
          path: spec.dataFrom[0].extract.key
          value: dev/app/secrets
      - equal:
          path: spec.dataFrom[1].extract.key
          value: prod/app/secrets2