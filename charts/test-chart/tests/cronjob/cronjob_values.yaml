global:
  render_key: rendered

cronjobs:
  backup-job:
    name: backup-job
    namespace: test-namespace
    schedule: "0 2 * * *"
    timeZone: "UTC"
    concurrencyPolicy: Forbid
    successfulJobsHistoryLimit: 5
    failedJobsHistoryLimit: 3
    backoffLimit: 3
    activeDeadlineSeconds: 3600
    restartPolicy: OnFailure
    containers:
      - name: backup
        image:
          registry: docker.io
          repository: busybox
          tag: 1.35.0
        command: 
          - /bin/sh
          - -c
          - "echo 'Running backup...' && sleep 30 && echo 'Backup completed'"
        env:
          BACKUP_PATH: "/data/backup"
          LOG_LEVEL: "INFO"
        envFrom:
          - configMapRef:
              name: backup-config
          - secretRef:
              name: backup-secret
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
          backup-volume:
            name: backup-volume
            mountPath: /data/backup
    volumes:
      backup-volume:
        name: backup-volume
        configMap:
          name: backup-config
          items:
            - key: config.yaml
              path: config.yaml
    annotations:
      example.com/managed-by: "helm"
    labels:
      app.kubernetes.io/component: "backup"
    podAnnotations:
      prometheus.io/scrape: "false"
    podLabels:
      backup-type: "database"
