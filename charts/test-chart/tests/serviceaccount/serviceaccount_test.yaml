suite: Test serviceaccount template
templates:
  - template.yaml

tests:
  - it: should create basic serviceaccount correctly
    values:
      - serviceaccount_values.yaml
    asserts:
      - equal:
          path: kind
          value: ServiceAccount
      - equal:
          path: apiVersion
          value: v1
      - equal:
          path: metadata.name
          value: app-sa
      - equal:
          path: metadata.namespace
          value: test-namespace

  - it: should set annotations correctly
    values:
      - serviceaccount_values.yaml
    set:
      serviceaccounts.app-sa.annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/my-role
    asserts:
      - equal:
          path: metadata.annotations["eks.amazonaws.com/role-arn"]
          value: arn:aws:iam::123456789012:role/my-role

  - it: should set labels correctly
    values:
      - serviceaccount_values.yaml
    set:
      serviceaccounts.app-sa.labels:
        custom-label: test-value
    asserts:
      - equal:
          path: metadata.labels["custom-label"]
          value: test-value

  - it: should not render serviceaccount if disabled
    values:
      - serviceaccount_values.yaml
    set:
      serviceaccounts.app-sa.disabled: true
    asserts:
      - hasDocuments:
          count: 0

  - it: should render global placeholders in annotations
    values:
      - serviceaccount_values.yaml
    set:
      global:
        rbac:
          policy: "strict"
          audit: true
        security:
          context: "restricted"
        owner: "platform-team"
      serviceaccounts.app-sa.annotations:
        serviceaccount.rbac-policy: "{{global.rbac.policy}}"
        serviceaccount.audit-enabled: "{{global.rbac.audit}}"
        serviceaccount.security-context: "{{global.security.context}}"
        serviceaccount.owner: "{{global.owner}}"
        serviceaccount.config: "{{global.rbac.policy}} policy with audit={{global.rbac.audit}}"
    asserts:
      - equal:
          path: metadata.annotations["serviceaccount.rbac-policy"]
          value: strict
      - equal:
          path: metadata.annotations["serviceaccount.audit-enabled"]
          value: "true"
      - equal:
          path: metadata.annotations["serviceaccount.security-context"]
          value: restricted
      - equal:
          path: metadata.annotations["serviceaccount.owner"]
          value: platform-team
      - equal:
          path: metadata.annotations["serviceaccount.config"]
          value: "strict policy with audit=true"
  
  - it: should render only one serviceaccount
    values:
      - serviceaccount_values.yaml
    set:
      serviceaccounts:
        app-sa:
          namespace: test-namespace
        app-sa2:
          namespace: test-namespace
          disabled: true
    asserts:
      - hasDocuments:
          count: 1

  - it: should set common labels correctly
    values:
      - serviceaccount_values.yaml
    asserts:
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: test-chart
  
  - it: should render globals in name
    values:
      - serviceaccount_values.yaml
    set:
      global:
        render: rendered
      serviceaccounts:
        app-sa:
          name: "test-{{ global.render }}"
    asserts:
      - equal:
          path: metadata.name
          value: test-rendered
