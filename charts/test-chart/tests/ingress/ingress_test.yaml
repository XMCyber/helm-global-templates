suite: Test ingress template
templates:
  - template.yaml

tests:
  - it: should create basic ingress correctly
    values:
      - ingress_values.yaml
    asserts:
      - equal:
          path: kind
          value: Ingress
      - equal:
          path: apiVersion
          value: networking.k8s.io/v1
      - equal:
          path: metadata.name
          value: app-ingress
      - equal:
          path: metadata.namespace
          value: test-namespace

  - it: should set ingressClassName correctly
    values:
      - ingress_values.yaml
    set:
      ingresses.app-ingress.ingressClassName: nginx
    asserts:
      - equal:
          path: spec.ingressClassName
          value: nginx

  - it: should configure basic rule correctly
    values:
      - ingress_values.yaml
    set:
      ingresses.app-ingress.rules:
        - host: example.com
          http:
            paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: app-service
                    port:
                      number: 80
    asserts:
      - equal:
          path: spec.rules[0].host
          value: example.com
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: /
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: Prefix
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: app-service
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 80

  - it: should set TLS configuration correctly
    values:
      - ingress_values.yaml
    set:
      ingresses.app-ingress.tls:
        - hosts:
            - example.com
          secretName: example-tls
    asserts:
      - equal:
          path: spec.tls[0].hosts[0]
          value: example.com
      - equal:
          path: spec.tls[0].secretName
          value: example-tls

  - it: should set multiple paths correctly
    values:
      - ingress_values.yaml
    set:
      ingresses.app-ingress.rules:
        - host: example.com
          http:
            paths:
              - path: /api
                pathType: Prefix
                backend:
                  service:
                    name: api-service
                    port:
                      number: 8080
              - path: /web
                pathType: Prefix
                backend:
                  service:
                    name: web-service
                    port:
                      number: 80
    asserts:
      - lengthEqual:
          path: spec.rules[0].http.paths
          count: 2
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: /api
      - equal:
          path: spec.rules[0].http.paths[1].path
          value: /web

  - it: should not render ingress if disabled
    values:
      - ingress_values.yaml
    set:
      ingresses.app-ingress.disable: true
    asserts:
      - hasDocuments:
          count: 0

  - it: should render global in ingressClassName
    values:
      - ingress_values.yaml
    set:
      global.test: aaa
      ingresses.app-ingress.ingressClassName: test-{{global.test}}
    asserts:
      - equal:
          path: spec.ingressClassName
          value: test-aaa

  - it: should set annotations correctly
    values:
      - ingress_values.yaml
    set:
      ingresses.app-ingress.annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
    asserts:
      - equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/rewrite-target"]
          value: /